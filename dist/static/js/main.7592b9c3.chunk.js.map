{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.7592b9c3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks =(props) =>{\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return {\r\n        signOut :  ()=>dispatch(signOut())\r\n    }\r\n    \r\n}\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then (()=>{\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((err)=>{\r\n            dispatch({type: 'LOGIN_ERROR', err});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut =()=> {\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then (()=> {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp =(newUser)=>{\r\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\r\n        const firebase =  getFirebase();\r\n        const firestore =  getFirestore();  \r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName : newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: 'SIGNUp_SUCCESS'});\r\n        }).catch(err=>{\r\n            dispatch({type: 'SIGNUP_ERROR', err});\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks =() =>{\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Navbar =(props)=>{\r\n    const { auth, profile } = props;\r\n    //console.log(auth);\r\n    const links =  auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications =(props)=>{\r\n    const {notifications} = props;\r\n    return(\r\n        <div>\r\n            <div className=\"section\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">Notifications</span>\r\n                        <ul className=\"notifications\">\r\n                            {notifications && notifications.map(item=>{\r\n                                return(\r\n                                    <li key={item.id}>\r\n                                        <span className=\"pink-text\">{item.user} </span>\r\n                                        <span>{item.content}</span>\r\n                                        <div className=\"grey-text note-date\">\r\n                                            {moment(item.time.toDate()).fromNow()}\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) =>{\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\"> {project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\"> {moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) =>{\r\n    return (\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map(project=>{\r\n                 return(\r\n                     <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                     </Link>\r\n                 )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n       // console.log(this.props);\r\n        const { projects, auth, notifications } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth : state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n        {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction ProjectDetails(props) {\r\n    //const id = props.match.params.id\r\n    const { project,auth } = props;\r\n    if(!auth.uid) return <Redirect to='/signin' />;\r\n    if(project){\r\n        return (\r\n            <div className=\"container section project-details\">\r\n            <card className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </card>\r\n        </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project ...</p>\r\n            </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state, ownProps)=>{\r\n    const id =  ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ?  projects[id] : null\r\n return {\r\n     project: project,\r\n     auth : state.firebase.auth\r\n\r\n }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn} from '../../store/actions/authActions'; \r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError,auth } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ?  <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth : state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        signIn : (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const { auth,authError } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError : state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        signUp : (newUser)=>dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}></input>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n        auth : state.firebase.auth\r\n    }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return {\r\n        createProject: (project)=> dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) =>{\r\n    return (dispatch, getState, {getFirebase, getFirestore }) =>{\r\n        //make async call to database\r\n        const firestore = getFirestore(); \r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId:authorId,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({type: 'CREATE_PROJECT', project: project});\r\n        }).catch((err)=>{\r\n            dispatch({type:'CREATE_PROJECT_ERROR', err}); \r\n        })\r\n\r\n        \r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component{\n  render() {\n  return (\n    <BrowserRouter>\n       <div className=\"App\">\n         <Navbar />\n         <Switch>\n           <Route exact path='/' component={Dashboard} />\n           <Route path= '/project/:id' component={ProjectDetails}/>\n           <Route path='/signin' component={SignIn} />\n           <Route path='/signup' component={SignUp}/>\n           <Route path='/create' component={CreateProject}/>\n         </Switch>\n       </div>\n    </BrowserRouter>\n   \n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS': \r\n        console.log('login success');\r\n        return {\r\n            ...state,\r\n            authError: null\r\n        }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success!');\r\n            return{\r\n                ...state,\r\n                authError : null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects : [\r\n        {id: '1', title: 'help me find pitch', content: 'bla bla bla'},\r\n        {id: '2', title: 'collect all the stars', content: 'bla bla bla'},\r\n        {id: '3', title: 'egg hunt with Yoshi', content: 'bla bla bla'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action)=>{\r\n    switch (action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth : authReducer,\r\n    project : projectReducer,\r\n    firestore : firestoreReducer,\r\n    firebase : firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app';\r\nimport 'firebase/firebase-firestore';\r\nimport 'firebase/auth';\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD_u6Dm7h2qSNqvw088jfXX_ggPC_W9f_s\",\r\n    authDomain: \"marioplan-68c96.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-68c96.firebaseio.com\",\r\n    projectId: \"marioplan-68c96\",\r\n    storageBucket: \"marioplan-68c96.appspot.com\",\r\n    messagingSenderId: \"19934766431\",\r\n    appId: \"1:19934766431:web:f1f43c9efb451e376f02ea\",\r\n    measurementId: \"G-7H46HJ3XFF\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore();\r\n  export default firebase;\r\n  //firebase.analytics();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore} from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store =  createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n  ) );\n\n\nstore.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render(\n    <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}